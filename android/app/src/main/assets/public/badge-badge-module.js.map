{"version":3,"sources":["webpack:///./src/app/badge/badge-page.component.ts","webpack:///./src/app/badge/badge-routing.module.ts","webpack:///./src/app/badge/badge.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAqD;AACd;AA2EvC;IAzEA;QA0EE,iBAAY,GAAG,SAAS,CAAC;IAiB3B,CAAC;IAbC,qCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,wCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAChC,CAAC;IACH,CAAC;IAdiB;QAAjB,+DAAS,CAAC,oDAAK,CAAC;kCAAQ,oDAAK;qDAAC;IAHpB,kBAAkB;QAzE9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,6yEAqET;SACF,CAAC;OACW,kBAAkB,CAkB9B;IAAD,yBAAC;CAAA;AAlB8B;;;;;;;;;;;;;;;;;;;;;;;;AC5EU;AACc;AAEK;AAE5D,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAkB,EAAE;CAC5C,CAAC;AAMF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACbU;AACM;AAEF;AACe;AACA;AAU5D;IAAA;IAA2B,CAAC;IAAf,WAAW;QARvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,0DAAW;aACZ;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"badge-badge-module.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { Badge } from '@ionic/angular';\n\n@Component({\n  selector: 'app-badge-page',\n  template: `\n  <ion-app>\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Badges</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content>\n    <ion-list>\n      <ion-list-header>Badges Right</ion-list-header>\n      <ion-item>\n        <ion-badge slot=\"end\" color=\"primary\">99</ion-badge>\n        <ion-label>Default Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"end\" color=\"primary\">99</ion-badge>\n        <ion-label>Primary Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"end\" color=\"secondary\">99</ion-badge>\n        <ion-label>Secondary Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"end\" color=\"danger\">99</ion-badge>\n        <ion-label>Danger Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"end\" color=\"light\">99</ion-badge>\n        <ion-label>Light Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"end\" color=\"dark\">99</ion-badge>\n        <ion-label>Dark Badge</ion-label>\n      </ion-item>\n      <ion-item (click)=\"toggleColor()\">\n        <ion-badge slot=\"end\" [color]=\"dynamicColor\">{{dynamicColor}}</ion-badge>\n        <ion-label>Dynamic Badge Color (toggle)</ion-label>\n      </ion-item>\n    </ion-list>\n\n    <ion-list>\n      <ion-list-header>Badges Left</ion-list-header>\n      <ion-item>\n        <ion-badge slot=\"start\" color=\"primary\">99</ion-badge>\n        <ion-label>Default Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"start\" color=\"primary\">99</ion-badge>\n        <ion-label>Primary Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"start\" color=\"secondary\">99</ion-badge>\n        <ion-label>Secondary Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"start\" color=\"danger\">99</ion-badge>\n        <ion-label>Danger Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"start\" color=\"light\">99</ion-badge>\n        <ion-label>Light Badge</ion-label>\n      </ion-item>\n      <ion-item>\n        <ion-badge slot=\"start\" color=\"dark\">99</ion-badge>\n        <ion-label>Dark Badge</ion-label>\n      </ion-item>\n    </ion-list>\n  </ion-content>\n  </ion-app>\n  `\n})\nexport class BadgePageComponent {\n  dynamicColor = 'primary';\n\n  @ViewChild(Badge) badge: Badge;\n\n  ngOnInit() {\n    console.log(this.badge);\n  }\n\n  toggleColor() {\n    if (this.dynamicColor === 'primary') {\n      this.dynamicColor = 'secondary';\n    } else if (this.dynamicColor === 'secondary') {\n      this.dynamicColor = 'danger';\n    } else {\n      this.dynamicColor = 'primary';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BadgePageComponent } from './badge-page.component';\n\nconst routes: Routes = [\n  { path: '', component: BadgePageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BadgeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IonicModule } from '@ionic/angular';\nimport { BadgePageComponent } from './badge-page.component';\nimport { BadgeRoutingModule } from './badge-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BadgeRoutingModule,\n    IonicModule\n  ],\n  declarations: [BadgePageComponent]\n})\nexport class BadgeModule { }\n"],"sourceRoot":""}