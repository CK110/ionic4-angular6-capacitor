{"version":3,"sources":["webpack:///./src/app/segment/segment-page.component.ts","webpack:///./src/app/segment/segment-routing.module.ts","webpack:///./src/app/segment/segment.module.ts"],"names":[],"mappings":"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","file":"segment-segment-module.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-segment-page',\n  template: `\n  <ion-app>\n      <ion-header>\n        <ion-toolbar>\n          <ion-segment id=\"segment\" [(ngModel)]=\"relationship\" (ionChange)=\"onSegmentChanged($event)\">\n            <ion-segment-button value=\"friends\" (ionSelect)=\"onSegmentSelected($event)\" class=\"e2eSegmentFriends\">\n              Friends\n            </ion-segment-button>\n            <ion-segment-button value=\"enemies\" (ionSelect)=\"onSegmentSelected($event)\">\n              Enemies\n            </ion-segment-button>\n          </ion-segment>\n        </ion-toolbar>\n        <ion-toolbar>\n          <ion-buttons slot=\"mode-end\">\n            <ion-button>\n              <ion-icon slot=\"icon-only\" name=\"search\"></ion-icon>\n            </ion-button>\n          </ion-buttons>\n          <ion-segment [(ngModel)]=\"icons\" color=\"secondary\">\n            <ion-segment-button value=\"camera\">\n              <ion-icon name=\"camera\"></ion-icon>\n            </ion-segment-button>\n            <ion-segment-button value=\"bookmark\">\n              <ion-icon name=\"bookmark\"></ion-icon>\n            </ion-segment-button>\n          </ion-segment>\n        </ion-toolbar>\n      </ion-header>\n      <ion-content padding>\n        <h4>Model style: NgModel</h4>\n        <ion-segment [(ngModel)]=\"modelStyle\" color=\"dark\" [disabled]=\"isDisabledS\">\n          <ion-segment-button value=\"A\">\n            Model A\n          </ion-segment-button>\n          <ion-segment-button value=\"B\">\n            Model B\n          </ion-segment-button>\n          <ion-segment-button value=\"C\" class=\"e2eSegmentModelC\">\n            Model C\n          </ion-segment-button>\n          <ion-segment-button value=\"D\" [disabled]=\"isDisabledB\">\n            Model D\n          </ion-segment-button>\n        </ion-segment>\n        <p>Model Style: <b>Model {{ modelStyle }}</b></p>\n        <ion-segment [(ngModel)]=\"icons\">\n          <ion-segment-button value=\"camera\">\n            <ion-icon name=\"camera\"></ion-icon>\n          </ion-segment-button>\n          <ion-segment-button value=\"bookmark\">\n            <ion-icon name=\"bookmark\"></ion-icon>\n          </ion-segment-button>\n        </ion-segment>\n        <ion-button color=\"dark\" (click)=\"toggleBDisabled()\">Toggle Button Disabled</ion-button>\n        <ion-button color=\"dark\" (click)=\"toggleSDisabled()\">Toggle Segment Disabled</ion-button>\n\n        <ion-item>\n          <ion-label>Period Days</ion-label>\n          <ion-select [(ngModel)]=\"valve.periodDays\" (ionChange)=\"periodDaysChange(valve)\">\n            <ion-select-option value=\"1\">1 Day</ion-select-option>\n            <ion-select-option value=\"2\">2 Days</ion-select-option>\n            <ion-select-option value=\"3\">3 Days</ion-select-option>\n            <ion-select-option value=\"4\">4 Days</ion-select-option>\n            <ion-select-option value=\"5\">5 Days</ion-select-option>\n            <ion-select-option value=\"6\">6 Days</ion-select-option>\n            <ion-select-option value=\"7\">7 Days</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-segment [(ngModel)]=\"valve.selectDay\">\n          <ion-segment-button *ngFor=\"let info of valve.daysInfo\" value=\"{{info.day}}\">{{info.day+1}}th day</ion-segment-button>\n        </ion-segment>\n      </ion-content>\n\n      <ion-footer>\n        <ion-toolbar color=\"primary\">\n          <ion-segment [(ngModel)]=\"appType\" color=\"light\">\n            <ion-segment-button value=\"paid\">\n              Primary\n            </ion-segment-button>\n            <ion-segment-button value=\"free\">\n              Toolbar\n            </ion-segment-button>\n            <ion-segment-button value=\"top\" class=\"e2eSegmentTopGrossing\">\n              Light Segment\n            </ion-segment-button>\n          </ion-segment>\n        </ion-toolbar>\n        <ion-toolbar>\n          <ion-segment [(ngModel)]=\"appType\" color=\"danger\">\n            <ion-segment-button value=\"paid\">\n              Default\n            </ion-segment-button>\n            <ion-segment-button value=\"free\">\n              Toolbar\n            </ion-segment-button>\n            <ion-segment-button value=\"top\">\n              Danger Segment\n            </ion-segment-button>\n          </ion-segment>\n        </ion-toolbar>\n        <ion-toolbar>\n          <ion-segment [(ngModel)]=\"appType\" color=\"dark\" [disabled]=\"isDisabledS\">\n            <ion-segment-button value=\"paid\">\n              Default\n            </ion-segment-button>\n            <ion-segment-button value=\"free\">\n              Toolbar\n            </ion-segment-button>\n            <ion-segment-button value=\"top\">\n              Dark Segment\n            </ion-segment-button>\n          </ion-segment>\n        </ion-toolbar>\n      </ion-footer>\n</ion-app>\n  `\n})\nexport class SegmentPageComponent {\n  relationship: string = 'friends';\n  modelStyle: string = 'B';\n  appType: string = 'free';\n  icons: string = 'camera';\n  isDisabledB: boolean = true;\n  isDisabledS: boolean = false;\n\n  valve = {\n    daysInfo: [],\n    selectDay: '0',\n    periodDays: 3\n  }\n\n  constructor() {\n    this.periodDaysChange(this.valve);\n  }\n\n  periodDaysChange(valve) {\n    valve.periodDays = parseInt(valve.periodDays);\n    if (valve.daysInfo.length < valve.periodDays) {\n      for (let i = valve.daysInfo.length; i < valve.periodDays; ++i) {\n        valve.daysInfo.push({day:i, intervals:[]});\n      }\n    } else if (valve.daysInfo.length > valve.periodDays) {\n      valve.daysInfo = valve.daysInfo.slice(0, valve.periodDays);\n    }\n  }\n\n  addDays(valve) {\n    valve.periodDays += 1;\n    this.periodDaysChange(valve);\n  }\n\n  toggleBDisabled() {\n    this.isDisabledB = !this.isDisabledB;\n  }\n\n  toggleSDisabled() {\n    this.isDisabledS = !this.isDisabledS;\n  }\n\n  onSegmentChanged(segmentButton: any) {\n    console.log('Segment changed to', segmentButton.currentTarget.value);\n  }\n\n  onSegmentSelected(segmentButton: any) {\n    console.log('Segment selected', segmentButton.currentTarget.value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SegmentPageComponent } from './segment-page.component';\n\nconst routes: Routes = [\n  { path: '', component: SegmentPageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SegmentRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { SegmentPageComponent } from './segment-page.component';\nimport { SegmentRoutingModule } from './segment-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SegmentRoutingModule,\n    IonicModule\n  ],\n  declarations: [SegmentPageComponent]\n})\nexport class SegmentModule { }\n"],"sourceRoot":""}