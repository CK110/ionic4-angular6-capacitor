{"version":3,"sources":["webpack:///./src/app/ng-if/ng-if-page.component.ts","webpack:///./src/app/ng-if/ng-if-routing.module.ts","webpack:///./src/app/ng-if/ng-if.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAqD;AAgCrD;IA9BA;QAgCE,UAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC;QAC7C,SAAI,GAAG,IAAI,CAAC;IAMd,CAAC;IAJC,kCAAM,GAAN;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;IAPU,iBAAiB;QA9B7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,QAAQ,EAAE,s1BA0BT;SACF,CAAC;OACW,iBAAiB,CAS7B;IAAD,wBAAC;CAAA;AAT6B;;;;;;;;;;;;;;;;;;;;;;;;AChCW;AACc;AAEI;AAE3D,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAiB,EAAE;CAC3C,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbW;AACM;AACF;AAEA;AACc;AACA;AAW3D;IAAA;IAA0B,CAAC;IAAd,UAAU;QATtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,uEAAiB;gBACjB,0DAAW;aACZ;YACD,YAAY,EAAE,CAAC,uEAAiB,CAAC;SAClC,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ","file":"ng-if-ng-if-module.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ng-if-page',\n  template: `\n  <ion-app>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>ngIf</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <p padding>Value should stay the same after ngIf removes the component from the DOM then adds it back in.</p>\n      <ion-list>\n        <ion-item>\n          <ion-label>Value: {{value}}</ion-label>\n        </ion-item>\n        <ion-item *ngIf=\"show\">\n          <ion-input value=\"{{value}}\"></ion-input>\n        </ion-item>\n        <ion-item *ngIf=\"show\">\n          <ion-input [value]=\"value\"></ion-input>\n        </ion-item>\n        <ion-item *ngIf=\"show\">\n          <ion-input [(ngModel)]=\"value\"></ion-input>\n        </ion-item>\n      </ion-list>\n      <ion-button (click)=\"toggle()\">ngIf {{ show ? 'hide' : 'show'}}</ion-button>\n    </ion-content>\n  </ion-app>\n  `\n})\nexport class NgIfPageComponent {\n\n  value = Math.round(Math.random() * 10000000);\n  show = true;\n\n  toggle() {\n    this.show = !this.show;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NgIfPageComponent } from './ng-if-page.component';\n\nconst routes: Routes = [\n  { path: '', component: NgIfPageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NgIfRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { NgIfPageComponent } from './ng-if-page.component';\nimport { NgIfRoutingModule } from './ng-if-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgIfRoutingModule,\n    IonicModule\n  ],\n  declarations: [NgIfPageComponent]\n})\nexport class NgIfModule { }\n"],"sourceRoot":""}